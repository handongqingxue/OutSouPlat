<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.outSouPlat.dao.SysNoticeMapper">
	<insert id="add" parameterType="com.outSouPlat.entity.SysNotice">
		insert into sys_notice
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sendUserId!=null">
				sendUserId,
			</if>
			<if test="receiveUserId!=null">
				receiveUserId,
			</if>
			<if test="title!=null">
				title,
			</if>
			<if test="content!=null">
				content,
			</if>
				createTime,
				`read`
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="sendUserId!=null">
				#{sendUserId},
			</if>
			<if test="receiveUserId!=null">
				#{receiveUserId},
			</if>
			<if test="title!=null">
				#{title},
			</if>
			<if test="content!=null">
				#{content},
			</if>
				now(),
				${@com.outSouPlat.entity.SysNotice@UN_READ}
		</trim>
	</insert>
	<delete id="deleteByIdList">
		delete from sys_notice where
		<foreach collection="idList" item="id" open="1=1 and cast(id as char) in (" separator="," close=")">
		#{id}
		</foreach>
	</delete>
	<select id="queryForInt" resultType="java.lang.Integer">
		select count(*) from sys_notice sn left join user send_u on sn.sendUserId=send_u.id left join user receive_u on sn.receiveUserId=receive_u.id where 1=1
		<if test="title!=''&amp;title!=null">
			and sn.title like CONCAT('%',#{title},'%')
		</if>
		<if test="sendUserName!=''&amp;sendUserName!=null">
			and send_u.username like CONCAT('%',#{sendUserName},'%')
		</if>
		<if test="receiveUserName!=''&amp;receiveUserName!=null">
			and receive_u.username like CONCAT('%',#{receiveUserName},'%')
		</if>
		<if test="createTimeStart!=''&amp;createTimeStart!=null&amp;createTimeEnd!=''&amp;createTimeEnd!=null">
			and sn.createTime between #{createTimeStart} and #{createTimeEnd}
		</if>
		<if test="read!=''&amp;read!=null">
			and sn.read=#{read}
		</if>
		<if test="userId!=''&amp;userId!=null">
			and sn.receiveUserId=#{userId}
		</if>
	</select>
	<select id="queryList" resultType="com.outSouPlat.entity.SysNotice">
		select sn.*,case when length(sn.content)>20 then CONCAT(SUBSTRING(sn.content,1,20),'...') else sn.content end contentSubStr,send_u.username sendUserName,receive_u.username receiveUserName from sys_notice sn left join user send_u on sn.sendUserId=send_u.id left join user receive_u on sn.receiveUserId=receive_u.id where 1=1  
		<if test="title!=''&amp;title!=null">
			and sn.title like CONCAT('%',#{title},'%')
		</if>
		<if test="sendUserName!=''&amp;sendUserName!=null">
			and send_u.username like CONCAT('%',#{sendUserName},'%')
		</if>
		<if test="receiveUserName!=''&amp;receiveUserName!=null">
			and receive_u.username like CONCAT('%',#{receiveUserName},'%')
		</if>
		<if test="createTimeStart!=''&amp;createTimeStart!=null&amp;createTimeEnd!=''&amp;createTimeEnd!=null">
			and sn.createTime between #{createTimeStart} and #{createTimeEnd}
		</if>
		<if test="read!=''&amp;read!=null">
			and sn.read=#{read}
		</if>
		<if test="userId!=''&amp;userId!=null">
			and sn.receiveUserId=#{userId}
		</if>
		order by createTime desc
		limit #{rowNum},#{rows}
	</select>
	<select id="selectById" resultType="com.outSouPlat.entity.SysNotice">
		select sn.*,send_u.username sendUserName,receive_u.username receiveUserName from sys_notice sn left join user send_u on sn.sendUserId=send_u.id left join user receive_u on sn.receiveUserId=receive_u.id where sn.id=#{id}
	</select>
	<update id="signRead">
		update sys_notice set `read`=${@com.outSouPlat.entity.SysNotice@READ}
		 where
		<foreach collection="idList" item="id" open="1=1 and cast(id as char) in (" separator="," close=")">
		#{id}
		</foreach>
	</update>
</mapper>